
Framework zum Erstellen von Datenstrukturen.
Die Datenstruktur wird mit Java-Objekten beschrieben.
Ziel ist es ein neues System zu bieten, das die vielen Probleme von JavaBeans löst.

- Kein Reflection, sondern Interfaces um auf Modelle und Felder zu zugreifen. Dadurch kann adaptiert werden.
- Beschreibung der Modelle und Felder mit Interfaces. Dadurch kann komponiert werden.
- Trennung des Speichers und der Zugriffsmethoden. Dadurch können Erweiterungen implementiert werden.
- Listener auf Feld-, Modell- und Struktur-Ebene.
- Navigation durch den Baum.
- Dynamische Modelle.

Zusätzlich aber auch die Vorteile von JavaBeans hat:
- Statisch typisierte Beschreibung von Modellen und Feldern. Dadurch fallen Fehler beim Kompilieren auf.
- Getter-Setter können wie bei JavaBeans erstellt werden.

Nachteile:
- Komplexität
- Generische Objekte


Trade-Offs:
- PropertyPitProvider für Flexbilität gegen Komplexität.
- Modelle werden kopiert und nicht verschoben. Sicherheit gegen Geschwindigkeit.


Überblick über die wichtigsten Objekte:
- PropertyDescriptions, Properties, PropertyPits, PropertyPitProviders und Hierarchies.
- PropertyDescriptions bieten statische Informationen über Properties.
- Properties sind der Zugriff auf aktuelle Daten mitsamt Informationen über die Daten.
- PropertyPits sind der Zugriff auf den Baum.
- PropertyPitProviders sind die Beschreibung des Baumes und Einstiegspunkte.
- Hierarchies sind die einzelne Bäume.


Fehlt:
- Synchronisation.
- Listener noch nicht umfangreich getestet.
- DelegatingHierarchy noch nicht umfangreich getestet.
- Immutable-Copy-Description für alle Objekte die als Werte verwendet werden.
